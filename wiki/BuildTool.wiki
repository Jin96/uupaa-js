#summary build/upa.php はプリプロセスとMinifyを施し最適化された.jsファイルを生成します

<wiki:toc max_depth="3" />

= upa =

build/upa.php はプリプロセスとMinifyを施し最適化された.jsファイルを生成します。

`upa.php [`*-g*` | -m | -y] [-mb] [-v] [-pp file] [-src dir] [-core file] [-nocore] [-off ident[/ident[/..]]] [*.js ...]`

== 導入 ==

=== Windows でビルドする ===
  * PHP CLI をインストールします。XAMPP を代わりにインストールしてもよいでしょう。
  * Javaの実行環境をインストールします。
  * http://pigs.sourceforge.jp/uupaa.js/build/minifier.zip をダウンロードし(*.exe, *.jar)ファイルを build ディレクトリ以下に設置してください。
  * 必要に応じてシステムの環境変数に php へのパスを追加します。
  * build ディレクトリに移動し、upa -v とタイプしエラーがでなければビルド可能な状態です。

=== Mac OS X / Ubuntu でビルドする ===
  * PHP CLI をインストールします。既にインストールされている場合は不要です。
  * Javaの実行環境をインストールします。既にインストールされている場合は不要です。
  * http://pigs.sourceforge.jp/uupaa.js/build/minifier.zip をダウンロードし(*.exe, *.jar)ファイルを build ディレクトリ以下に設置してください。
  * build ディレクトリに移動し、upa.php -v とタイプしエラーがでなければビルド可能な状態です。

|| *-g*   || use Google Closure Compiler || (default) ||
|| -m   || use Microsoft Ajax Minifier || ||
|| -y   || use YUI Compressor || ||
|| -mb  || Mobile WebKit Mode || `{{{`!mb ～ `}}}`!mb を削除します <br /> 生成されるコードは MobileWebKit(iPhone,iPad, iPod)専用になります。<br /> -core に指定されたファイルを別個にビルドします(最大で2回ビルドします) ||
|| -v   || verbose mode || ビルド対象一覧を表示します。ビルド結果を表示し一時停止します ||
|| -pp  || preprocessor file || プロプロセスで使用するPHPコードを指定します。デフォルトは "js.php" です ||
|| -srcdir || source directory || ソースコードを読み込む基準ディレクトリを指定します。デフォルトは "../src/" です ||
|| -core || library core || ライブラリの核となるファイルを指定します。デフォルトは "uupaa.js" です。<br /> ビルドで生成するファイル名も -core で指定したファイル名になります ||
|| -nocore || no library core || ライブラリの核となるファイルをマージせずにビルドします ||
|| -off || castoff || コメントアウトする機能名をスラッシュで連結し指定します。例: -off form/snippet ||
|| *.js || JavaScript source code file path || ソースコードファイルパスを指定します。相対パスで指定した場合は -srcdir 以下からファイルを読み取ります ||

== -off ==
 -off オプションに指定可能な文字列の一覧です

|| *ident*   || 説明 || 削減されるファイルサイズ<br />(Minify適用後の値) ||
|| form      || uu.value() と NodeSet.value() をコメントアウトします || -0.6kB ||
|| snippet   || uu.snippet() をコメントアウトします || -0.7kB ||
|| image     || uu.image() をコメントアウトします || -0.9kB ||
|| color     || uu.color() をコメントアウトします。<br />uu.fx でカラーアニメーションが利用できなくなります || -5.1kB ||
|| colordict || 色辞書をコメントアウトします。<br />uu.color() は利用可能ですが "black" や "skyblue" などの W3C Named Color は利用できません || -2.3kB ||

= 例 =
各オプションの利用方法について説明します。

== JavaScriptソースコードをビルドする ==
 *upa src.js
 src.js を相対パスで指定しているため {$sourceDir}/src.js がロードされます。


== 複数のソースコードを結合し一つのファイルにビルドする ==
 *upa a.js b.js c.js

== iPhone/iPad用にビルドする ==
 *upa src.js -mb
 uupaa.mb.js と uupaa.mb2.js の2つのファイルが生成されます。
 uupaa.mb.js には uupaa.js を Minify したものが。uupaa.mb2.js にはそれ以外のファイルを結合し Minify したものが格納されています。

== iPhone/iPad用に最小構成でビルドする ==
 *upa src.js -mb -off form/snippet/image/color
 uupaa.mb.js と uupaa.mb2.js の2つのファイルが生成されます。
 この構成では uu.value(), uu.snippet(), uu.image(), uu.color() 等が利用できませんが、ファイルサイズを最小に留めることができます。

== Microsoft Ajax Minifier でビルドする(Windows環境のみ) ==
 *upa src.js -m

== YUI Compressor でビルドする ==
 *upa src.js -y

== -core でライブラリコアを指定してビルドする ==
 *upa src.js -core anotherLibrary.js
 生成されるファイルは anotherLibrary.js という名前になります。
 uupaa.js ライブラリ以外のライブラリやファイルをビルドできます。

== -pp でプリプロセス用のPHPコードを指定してビルドする ==
 *upa src.js -pp c.pp

== -nocore でコアをマージせずにビルドする ==
 *upa -nocore src.js src2.js


= 中間ファイル(catfood.js) =
uupaa.js が生成されるディレクトリと同じディレクトリに、各ソースコードを結合し、Minifyを行う直前の状態のファイルが catfood.js という名前で生成されます。
Minifier が行番号付きでエラーや警告を出した場合は catfood.js の行番号と照らし合わせソースコードを修正してください。