#summary uu.node.add はノードを追加します

<wiki:toc max_depth="2" />

= 導入 =

uu.node.add は指定されたコンテキスト(ノード)にノードを追加します。uu.add は uu.node.add の alias です。

= API =

== uu.node.add ==
uu.node.add(_source_:Node/NodeArray/DocumentFragment/HTMLFragmentString/TagName = "div", _context_:Node = `<body>`, _position_:Number/String = "./last"):Node は、_source_ で指定されたノードを _context_ ノードに追加し、追加したノードを返します(複数のノードを一度に追加した場合は、最初に追加したノード(先頭のノード)を返します)。追加する位置は、_position_ で指定します。

_source_ に NodeArray を指定すると、指定されたノードを全て追加します。
_source_ に DocumentFragment を指定すると、DocumentFragment 内の全てのノードを追加します。
_source_ に文字列( HTMLFragmentString )を指定すると、文字列からノードを生成し追加します。
_source_ にタグ文字列を `<` と `>` なしで指定すると、指定されたタグ(要素)を生成し追加します。
_context_ を省略すると `<body>` に要素を追加します。
_position_ には数値または文字列で追加/挿入位置を指定します。
|| 1 または "first"   || contextNode と同じ階層の先頭(firstSibling)に _source_ を挿入します(長男にします) ||
|| 2 または "prev"    || contextNode の前(prevSibling)に _source_ を挿入します(一つ兄にします) ||
|| 3 または "next"    || contextNode の次(nextSibling)に _source_ を挿入します(一つ弟にします) ||
|| 4 または "last"    || contextNode と同じ階層の末尾(lastSibling)に _source_ を追加します(末弟にします) ||
|| 5 または "./first" || contextNode の最初の子として _source_ を挿入します ||
|| 8 または "./last"  || contextNode の最後の子として _source_ を挿入します ||

{{{
<div id="parentNode">

    <div id="firstSibling">    (1) first  </div>
    <div id="prevSibling">     (2) prev   </div>
    <div id="contextNode">
        <div id="firstChild">  (5) ./first </div>
        <div />
        <div id="lastChild">   (8) ./last  </div>
    </div>
    <div id="nextSibling">     (3) next   </div>
    <div id="lastSibling">     (4) last   </div>

</div>
}}}
= 用例 =
{{{
[1][add div node to body]     uu.node.add()         -> <body><div /></body>
[2][add p tag to body]        uu.node.add("p")      -> <body><p /></body>
[3][add Node to body]         uu.node.add(uu.div()) -> <body><div /></body>
[4][add NodeArray to context] uu.node.add([<link>, <link>], document.head) -> <head>...<link/><link/></head>
[5][add HTMLFragmentString]   uu.node.add("<div><p>txt</p></div>") -> <body><div><p>txt</p></div></body>
[6][add DocumentFragment]     uu.node.add(DocumentFragment)        -> <body>{{fragment}}</body>
[7][insert tr and tds]        uu.node.add(uu.tr(uu.td("A"), uu.td("B")), uu.id("ctx"), "prev") -> <tr>
            <table>
                <tr id="ctx"><td>C></td><td>D</td></tr>
            </table>
                   v
            <table>
                <tr><td>A></td><td>B</td></tr>
                <tr id="ctx"><td>C></td><td>D</td></tr>
            </table>
}}}

7番目の例は、uu.node.add() で `<tr><td>A</td><td>B</td></tr>` を追加する例です。
uu.node.bulk() は テーブルの行の作成をサポートしていないため uu.node.bulk(`<tr><td>A</td><td>B</td></tr>`) とすると例外が発生します、uu.node.add() と uu.tr(), uu.td() を使ってください。


= Test Code =
{{{
<!DOCTYPE html><html lang="ja"><head><meta charset="utf-8" />
<title>uu.node.add(TableHTMLFragment)</title>
<style></style>
<script src="../../src/uupaa.js"></script>
<script>
uu.ready(function(uu, doc) {
    var tr = uu.id("xx"); // <tbody><tr id='xx'>...</tr></tbody>

    uu.add(uu.tr(uu.td("A"), uu.td("B")), tr, "prev");
});
</script>
</head><body>

<table>
<tr id='xx'><td>C</td><td>D</td></tr>
</table>

</body></html>
}}}