<!doctype html><html><head><meta charset="UTF-8" />
<title>uu.url.test</title>
<style>
body { background-color: #eee }
.uutest ol { background-color:dodgerblue;color:white }
.uutest li { padding:5px;border:1px solid #ccc }
.uutest .li0 { background-color:red   }
.uutest .li1 { background-color:green }
.uutest .li2 { background-color:red   }
.uutest .li3 { background-color:#0b0  }
.uutestinfo { position:fixed;top:10px;right:10px;font-size:xx-large }
.uutestinfo a { border: 3px outset gray;padding:3px;background-color:red;color:white }
.uutestinfo .score { color:black;text-shadow:gray 1px 1px 1px }
.uutestinfo .ngzone {}
</style>
<script src="../../src/uupaa.js"></script>
<script src="../../src/test/test.js"></script>
<script src="../../src/misc/url.js"></script>
<script>
uu.ready(function(uu) {

    uu.test({
        "get absolute directory": "",
        "uu.url() - current abs-dir": function() {
            var url = uu.url();

            return [url, "is string"];
        },
        "uu.url(uu.url()) to URLHash": function() {
            var hash = uu.url(uu.url());

            return [hash, "is hash"];
        },
        "parse url": "",
        "uu.url('http://example.com:8080/dir/file.ext?query=string;more=value#fragment') - parse url": function() {
            var url = "http://example.com:8080/dir/file.ext?query=string;more=value#fragment";
            var result = {
                url:        "http://example.com:8080/dir/file.ext?query=string;more=value#fragment",
                scheme:     "http",
                domain:     "example.com",
                port:       "8080",
                base:       "http://example.com:8080/dir/",
                path:       "/dir/file.ext",
                dir:        "/dir/",
                file:       "file.ext",
                query:      "query=string;more=value",
                hash:       { query: "string", more: "value" },
                fragment:   "fragment"
            };
            var hash = uu.url(url);

            return [hash, "==", result];
        },
        "build url": "",
        "uu.url(URLHash) -> build url": function() {
            var result = "http://example.com:8080/dir/file.ext?query=string;more=value#fragment";
            var hash = {
                url:        "http://example.com:8080/dir/file.ext?query=string;more=value#fragment",
                scheme:     "http",
                domain:     "example.com",
                port:       "8080",
                base:       "http://example.com:8080/dir/",
                path:       "/dir/file.ext",
                dir:        "/dir/",
                file:       "file.ext",
                query:      "query=string;more=value",
                hash:       { query: "string", more: "value" },
                fragment:   "fragment"
            };
            var url = uu.url(hash);

            return [url, "==", result];
        },
        "rebuild url(parse + build)": "",
        "uu.url(uu.url('http://example.com:8080/dir/file.ext?query=string;more=value#fragment'))": function() {
            var url = "http://example.com:8080/dir/file.ext?query=string;more=value#fragment";

            return [uu.url(uu.url(url)), "==", url];
        },
        "get absolute path": "",
        "uu.url.abs('../dir/file.ext') は 相対URL を絶対URLに変換する": function() {
            return [uu.url.abs('../dir/file.ext'), "is string"];
        },

        "get directory": "",
        "uu.url.dir('http://example.com/dir/file.ext') -> 'http://example.com/dir/'": function() {
            var hash = uu.url.dir("http://example.com/dir/file.ext");

            return [hash, "==", "http://example.com/dir/"];
        },
        "uu.url.dir('/root/dir/file.ext') -> '/root/dir/'": function() {
            var hash = uu.url.dir('/root/dir/file.ext');

            return [hash, "==", '/root/dir/'];
        },
        "uu.url.dir('/file.ext') -> '/'": function() {
            var hash = uu.url.dir('/file.ext');

            return [hash, "==", '/'];
        },
        "uu.url.dir('/') -> '/'": function() {
            var hash = uu.url.dir('/');

            return [hash, "==", '/'];
        },
        "uu.url.dir('') -> '/'": function() {
            var hash = uu.url.dir('');

            return [hash, "==", '/'];
        },
        "split directory, file": "",
        "uu.url.split('http://example.com/dir/file.ext') -> ['http://example.com/dir/', 'file.ext']": function() {
            var ary = uu.url.split('http://example.com/dir/file.ext');

            return [ary, "==", ['http://example.com/dir/', 'file.ext']];
        },
        "query string": "",
        'uu.url.query("key=val;key2=val2") -> { key: "val", key2: "val2" }': function() {
            var result = uu.url.query("key=val;key2=val2");

            return [result, "==", { key: "val", key2: "val2" }];
        },
        'uu.url.query({ key: "val",     key2: "val2" }) -> "key=val;key2=val2"': function() {
            var result = uu.url.query({ key: "val",     key2: "val2" });

            return [result, "==", "key=val;key2=val2"];
        },
        'uu.url.query( "key=val",     { key2: "val2" }) -> "key=val;key2=val2"': function() {
            var result = uu.url.query( "key=val",     { key2: "val2" });

            return [result, "==", "key=val;key2=val2"];
        },
        'uu.url.query({ key: "val" }, { key2: "val2" }) -> "key=val;key2=val2"': function() {
            var result = uu.url.query({ key: "val" }, { key2: "val2" });

            return [result, "==", "key=val;key2=val2"];
        },
        "boundary": "",
        "uu.url.query('http://example.com:8080/dir/file.ext?key=val&key2=val2#fragment') は URL から QueryString を取り出しパース可能": function() {
            var url = 'http://example.com:8080/dir/file.ext?key=val&key2=val2#fragment';

            return [uu.url.query(url), "==", { key: "val", key2: "val2" }];
        },
        "uu.url.query('key=val&key2=val2#frag') はパースに失敗する": function() {
            return [uu.url.query('key=val&key2=val2#frag'), "!=", { key: "val", key2: "val2" }];
        }

    });
});
</script>
</head><body></body></html>
