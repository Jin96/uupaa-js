<!doctype html><html><head><meta charset="utf-8" />
<title>uu.fx demo</title>
<style>
html, body {
  overflow: hidden;
}
.box {
  position: absolute;
  width: 100px;
  height: 100px;
  outline: 0px silver solid;
  background-color: #ff4100;
  color: white;
  text-align: center;
}
.static {
  position: static;
}
.margin10  { margin:  10px; }
.padding10 { padding: 10px; }
.border10  { border:  10px double turquoise; }
.outline10 { outline: 10px solid springgreen; }
</style>
<script src="../../src/uupaa.js"></script>
<script>
var duration = 300;
var range = 200;
var parts = 10;
var degree = 270;
var bgcolor = uu.color("#ff4100");

function moveDuration(that) {
    duration = that.value
    uu.text(uu.id("durationValue"), duration);
    bgcolor = bgcolor.arrange(3, 0, 0);

    uu("div.box").css("bgc", bgcolor + "");
}
function moveRange(that) {
    range = that.value
    uu.text(uu.id("rangeValue"), range);
}
function moveParts(that) {
    parts = that.value
    uu.text(uu.id("partsValue"), parts);
}

var toggle = 1;
function fade(evt) {
    if (toggle) {
        uu.fx.fade(evt.node, duration, { after: function() {
            uu.fx(evt.node, 1000, { o: 0.1 });
        }});
        toggle = 0;
    } else {
        uu.fx.fade(evt.node, duration, { before: function() {
            uu.fx(evt.node, 1000, { o: 1 });
        }});
        toggle = 1;
    }
}

function movein(evt) {
    degree += 10;
    if (degree > 360) {
        degree = 0;
    }
    uu.fx.movein(evt.node, duration, { degree: degree, range: range });
}

function moveout(evt) {
    degree += 10;
    if (degree > 360) {
        degree = 0;
    }
    uu.fx.moveout(evt.node, duration, { degree: degree, range: range,
                                        begin: 1, reverse: 1 });
}

function flare(evt) {
    uu.fx.flare(evt.node, duration, { range: range, parts: parts,
                                      begin: 1, reverse: 1 });
}

function puff(evt) {
    uu.fx.puff(evt.node, duration, { begin: 1, reverse: 1 });
}

function shrink(evt) {
    uu.fx.shrink(evt.node, duration, { begin: 1, reverse: 1 });
}

function highlight(evt) {
    uu.fx.highlight(evt.node, duration, { begin: 1, reverse: 1 });
}

uu.ready(function(uu) {
    var x = 0;
    var y = 0;
    var margin = 10;

    // position: absolute
    uu.each({ movein: movein, moveout: moveout, flare: flare,
              fade: fade, puff: puff, shrink: shrink,
              highlight: highlight }, function(fn, key) {

//      uu.css.userSelect(
            uu.node.add(
                uu.click(
                    uu.div({ cn: "box" }, { x: x, y: y + 40 }, uu.text(key)), fn), uu.id("absolutebox"))
//        );

        x += 100 + margin;
        if (x > (100 + margin) * 5) {
            y += 100 + margin;
            x = 0;
        }
    });
    // position: static
    uu.each({ puff: puff, shrink: shrink }, function(fn, key) {

//      uu.css.userSelect(
            uu.node.add(
                uu.click(
                    uu.div({ cn: "box static" }, { cssFloat: "left" }, uu.text(key)), fn), uu.id("staticbox"))
//      );
    });

    uu.css.userSelect();
});

function toggleMargin() {
    uu("div.box").klass("!margin10");
}
function togglePadding() {
    uu("div.box").klass("!padding10");
}
function toggleBorder() {
    uu("div.box").klass("!border10");
}
function toggleOutline() {
    uu("div.box").klass("!outline10");
}

</script>
</head><body id="body">
<div>
  <div>
    TOGGLE:
    <input type="button" value="margin" onclick="toggleMargin()" />
    <input type="button" value="padding" onclick="togglePadding()" />
    <input type="button" value="border" onclick="toggleBorder()" />
    <input type="button" value="outline" onclick="toggleOutline()" /> |
  </div>
</div>


DURATION: <input type="range" step="50" value="300" min="0" max="2000" onchange="moveDuration(this)" />
    <span id="durationValue">300</span>
    <br />
RANGE: <input type="range" step="50" value="200" min="100" max="400" onchange="moveRange(this)" />
    <span id="rangeValue">200</span>
    <br />
PARTS: <input type="range" step="1" value="10" min="1" max="20" onchange="moveParts(this)" />
    <span id="partsValue">10</span>


<div id="absolutebox" style="position:absolute;top:120px;left:100px">
    <p><b>position:absolute</b></p>
</div>


<div style="position:absolute;top:360px;left:100px">
    <p id="staticbox"><b>position:static</b></p>

</div>

</body></html>
