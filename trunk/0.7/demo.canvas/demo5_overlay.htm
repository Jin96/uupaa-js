<!DOCTYPE html>
<html>
<head>
<title>Overlay animation</title>
<style>

</style>
<script>xconfig={dir:"../"}</script>
<script type="text/javascript" src="../uupaa.js"></script>
<script>

Date.now = Date.now || function() {
  return new Date().getTime();
};

var points = [];
var startTime = Date.now();

function addPointAtEvent(e) {
  var x = e.offsetX || e.layerX;
  var y = e.offsetY || e.layerY;
  if (!isNaN(x) && !isNaN(y)) {
    points.push([x, y, Date.now()]);
  }
  if (points.length == 1) {
    draw();
  }
}

var AGE_TO_LIVE = 1500;

/* *************** */
// calc fps
var begin = +new Date;
var fpscount = 0;
// use ctx.lock()
var uselock = 1;
var fill = 1;
/* *************** */


function draw() {

    var ctx = document.getElementById('c').getContext('2d');
    ctx.xFlyweight = 1;

    if (uselock) {
        ctx.lock(1);
    } else {
        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
    }

    var now = Date.now();
    var itemsToRemove = 0;
    for (var i = 0; i < points.length; i++) {
        var x = points[i][0];
        var y = points[i][1];
        var createTime = points[i][2];
        var age = now - createTime;

        if (age > AGE_TO_LIVE) {
            itemsToRemove++;
        } else {
            var d = (AGE_TO_LIVE - age) / AGE_TO_LIVE;
            var r = d * 50;
            var hue = (createTime - startTime) / 10 % 360;
/*
            ctx.fillStyle = 'hsl(' + hue + ',100%,50%)';
            ctx.globalAlpha = .5 * d;
            ctx.beginPath();
            ctx.arc(x, y, r, 0, 2 * Math.PI, true);
            ctx.fill();
            ctx.closePath();
 */
            ctx.globalAlpha = 0.5 * d;
            if (fill) {
                ctx.fillCircle(x, y, r, uu.color('hsl(' + hue + ',100%,50%)'));
            } else {
//              ctx.lineWidth = 1;
                ctx.strokeCircle(x, y, r, uu.color('hsl(' + hue + ',100%,50%)'));
            }
        }
    }

    if (uselock) {
        ctx.unlock();
    }
    // fps
    if ((++fpscount & 0x3f) === 0x3f) {
        var fps = fpscount / (((+new Date) - begin))
        window.status = "fps = " + ((fps * 1000) | 0) + (uselock ? " boost" : " off");
    }


    if (itemsToRemove) {
        points = points.slice(itemsToRemove);
    }

    if (points.length) {
        window.setTimeout(draw, 10);
    }
  }

/*
window.onload = function() {
  document.getElementById('c').onmousedown = function(e) {
    addPointAtEvent(e || window.event);
  };
};
 */
function xcanvas() {
    canvas=document.getElementById("c").getContext("2d");
    canvas.xFlyweight = 1;

    if (canvas instanceof uu.canvas.VML2D) {
        uu.id("detected").innerText = "Backend: VML";
    } else if (canvas instanceof uu.canvas.FL2D) {
        uu.id("detected").innerText = "Backend: Flash";
    } else if (canvas instanceof uu.canvas.SL2D) {
        uu.id("detected").innerText = "Backend: Silverlight";
    } else {
        uu.id("detected").innerText = "Native Canvas";
    }

    document.getElementById('c').onmousedown = function(e) {
        addPointAtEvent(e || window.event);
    };
}
function boost() {
    begin = +new Date; // reset
    fpscount = 0; // reset
    uselock = !uselock; // toggle
}
function switchStyle() {
    fill = !fill; // toggle
}
function switchBackend() {
    var n = window.name || "";

    if (!n) {
        window.name = "flash";
    } else {
        switch (n) {
        case "sl":      window.name = "flash"; break;
        case "flash":   window.name = "vml"; break;
        case "vml":     window.name = "sl"; break;
        }
    }
    location.reload(false);
}
function xboot(uu) {
    uu.id("c").className = window.name || "sl";
}


</script>
</head>
<body>
<input type="button" value="boost on/off" onclick="boost()" />
<input type="button" value="sl/flash/vml" onclick="switchBackend()" />
<input type="button" value="fill/stroke" onclick="switchStyle()" />
<h1 id="detected"></h1>

<canvas id="c" width=500 height=500 onmousemove="addPointAtEvent(event)"></canvas>


</body>
</html>
