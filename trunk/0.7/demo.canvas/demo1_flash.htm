<!--
	Copyright 2006 Google Inc.

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	  http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<!doctype html><html><head>
	<title>ExplorerCanvas Example 1</title>
	<style>
		body {
			background-color:black;
			margin:50px;
			text-align:center;
		}

		canvas {
			border:1px solid #444;
		}
	</style>
  <script>window.xconfig = { imgdir: "../" };</script>

  <script src="../uupaa.js"></script>
	<script>
function stress() {
    if (!window.name || window.name === "20 boost") {
        window.name = "833 boost";
        location.reload(false);
    } else {
        window.name = "20 boost";
        location.reload(false);
    }
}
		var canvas, ctx;
		var particles = [];
		var NUM_PARTICLES = 20;
// calc fps
var begin = +new Date;
var fpscount = 0;
// use ctx.lock()
var uselock = 0;

	    if (window.name) {
	        var cmd = window.name.split(" ");

	        NUM_PARTICLES = parseInt(cmd[0]);
	        if (cmd[1] === "boost") {
                uselock = 1;
	        }
	    }


		function Particle() {
			this.x = Math.random() * canvas.width;
			this.y = Math.random() * canvas.height;

			this.xvel = Math.random() * 5 - 2.5;
			this.yvel = Math.random() * 5 - 2.5;
		}

		Particle.prototype.update = function() {
			this.x += this.xvel;
			this.y += this.yvel;

			this.yvel += 0.1;

			if (this.x > canvas.width || this.x < 0) {
				this.xvel = -this.xvel;
			}

			if (this.y > canvas.height || this.y < 0) {
				this.yvel = -this.yvel;
			}
		}

		function loop() {
            if (uselock) {
                ctx.lock(1);
            } else {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
            }

			for(var i = 0; i < NUM_PARTICLES; i++) {
				particles[i].update();

				ctx.beginPath();
				ctx.moveTo(particles[i].x, particles[i].y);
				ctx.lineTo(particles[i].x - particles[i].xvel,
									 particles[i].y - particles[i].yvel);
				ctx.stroke();
				ctx.closePath();
			}

            if (uselock) {
                ctx.unlock();
            }

			setTimeout(loop, 0);

            // fps
            if ((++fpscount & 0x3f) === 0x3f) {
                var fps = fpscount / (((+new Date) - begin))
                window.status = "fps = " + ((fps * 1000) | 0) + (uselock ? " boost" : " off");
		    }
		}

		function xcanvas() {
			canvas = document.getElementById("canvas");
			ctx = canvas.getContext("2d");

			if (ctx instanceof uu.canvas.VML2D) {
    		    uu.id("detected").innerText = "Backend: VML";
			} else if (ctx instanceof uu.canvas.FL2D) {
    		    uu.id("detected").innerText = "Backend: Flash";
			} else if (ctx instanceof uu.canvas.SL2D) {
    		    uu.id("detected").innerText = "Backend: Silverlight";
            } else {
    		    uu.id("detected").innerText = "Native Canvas";
            }


			ctx.xFlyweight = 1;

			for(var i = 0; i < NUM_PARTICLES; i++) {
				particles[i] = new Particle();
			}

			ctx.lineWidth = "2";
			ctx.strokeStyle = "rgb(255, 255, 255)";
			loop();
		}
function boost() {
  begin = +new Date; // reset
  fpscount = 0; // reset
  uselock = !uselock; // toggle
}
	</script>
</head>
  <body>
    <h1 id="detected" style="color:white"></h1>
	<input type="button" value="boost on/off" onclick="boost()" />
	<input type="button" value="stress on/off" onclick="stress()" />
	<br />
	<canvas id="canvas" class="flash" width="400" height="300"></canvas>
</body>
</html>
