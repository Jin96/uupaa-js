<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>uupaa.js - canvas bench</title>
<!--[if IE]><script id="excanvas.js" type="text/javascript" src="http://pigs.sourceforge.jp/excanvas.js"></script><![endif]-->
<script id="uupaa.js" type="text/javascript" src="../../uupaa.js?module=dev,canvas"></script>

<style type="text/css">
body { height: 100%; background-color: white; }
#canvas { position: absolute; top: 150px; left: 0px; outline: 1px solid skyblue; }
</style>
</head>
<body>
<div>
  <a href="../../README.htm#demo">README</a> &gt; <a href="../../FEATURE.htm">FEATURE</a> &gt; canvas bench
  <br />
  <a href="./bench_notrepair.htm">to Official excanvas (ver 0.2) mode...</a>
  <br />
  <input type="button" onclick="clearcanvas()" value="clear canvas" /><br />
  <input type="button" onclick="colorstroke(1, 30)" value="TEST1: color stroke(30)" />
  <input type="button" onclick="colorfill(1, 30)" value="TEST2: color fill(30)" />
  <input type="button" onclick="patternstroke(1, 30)" value="TEST3: pattern stroke(30)" />
  <input type="button" onclick="patternfill(1, 30)" value="TEST4: pattern fill(30)" />
  <img id="icon" src="../../img/i32.png" alt="IE" />
  <br />

  <input type="button" onclick="radialstroke(1, 30)" value="TEST5: radial stroke(30)" />
  <input type="button" onclick="radialfill(1, 30)" value="TEST6: radial fill(30)" />
  <input type="button" onclick="linearstroke(1, 30)" value="TEST7: linear stroke(30)" />
  <input type="button" onclick="linearfill(1, 30)" value="TEST8: linear fill(30)" />

  <canvas id="canvas" width="1000" height="1000"></canvas>

</div>

<script>
var bench = uu.klass.kiss();
bench.prototype = {
  construct:
            function() {
              this.can = uu.id("canvas"),
              this.c2d = new uu.module.canvas2d(this.can),
              this.c2d.setStyle({ alpha: 0.2, width: 5, color: "violet" });
            },
  clear:    function() {
              this.c2d.clear();
            },
  random:
            function() {
              return { x: Math.random() * this.c2d.ctx.canvas.width  | 0,
                       y: Math.random() * this.c2d.ctx.canvas.height | 0,
                       r: (Math.random() * 100 | 0) + 100 };
            },
  image:    function() {
            },
  stockedStyle:
            function(name,x, y, r) {
              switch (name) {
              case "colorStroke":   this.c2d.setStyle({ stroke: "rgba(40%, 50%, 60%, 0.4)"   }); break;
              case "colorFill":     this.c2d.setStyle({ fill:   "rgba(40%, 50%, 60%, 0.4)"   }); break;
              case "patternStroke": this.c2d.setStyle({ stroke: this.c2d.pattern(uu.id("icon")) }); break;
              case "patternFill":   this.c2d.setStyle({ fill:   this.c2d.pattern(uu.id("icon")) }); break;
              case "radialStroke":  this.c2d.setStyle({ stroke: this.c2d.gradation([x, y, r / 2, x, y, r],
                                                                                   [0.0, "red", 0.4, "violet", 1.0, "white"]) }); break;
              case "radialFill":    this.c2d.setStyle({ fill:   this.c2d.gradation([x, y, r / 2, x, y, r],
                                                                                   [0.0, "red", 0.4, "violet", 1.0, "white"]) }); break;
              case "linearStroke":  this.c2d.setStyle({ stroke: this.c2d.gradation([x, y, x + 140, y + 140],
                                                                                   [0.0, "orange", 0.5, "violet", 0.7, "gold", 1.0, "white"]) }); break;
              case "linearFill":    this.c2d.setStyle({ fill:   this.c2d.gradation([x, y, x + 140, y + 70],
                                                                                   [0.0, "orange", 0.5, "violet", 0.7, "gold", 1.0, "pink"]) }); break;
              }
            },
  colorStroke:
            function() {
              var rnd = this.random();
              this.c2d.begin().box(rnd.x, rnd.y, 140, 140, 20, 1).close();
            },
  colorFill:
            function() {
              var rnd = this.random();
              this.c2d.begin().box(rnd.x, rnd.y, 140, 140, 20).close();
            },
  patternStroke:
            function() {
              var rnd = this.random();
              this.c2d.begin().box(rnd.x, rnd.y, 140, 140, 20, 1).close();
            },
  patternFill:
            function() {
              var rnd = this.random();
              this.c2d.setStyle({ color: uu.css.get(document.body, "backgroundColor") });
              this.c2d.begin().box(rnd.x, rnd.y, 140, 140, 20).close();
              this.c2d.setStyle({ color: "violet" });
            },
// ----
  radialStroke:
            function() {
              var rnd = this.random();
              this.stockedStyle("radialStroke", rnd.x, rnd.y, rnd.r);
              this.c2d.oval(rnd.x, rnd.y, 0, 0, 200, 1);
            },
  radialFill:
            function() {
              var rnd = this.random();
              this.stockedStyle("radialFill", rnd.x, rnd.y, rnd.r);
              this.c2d.oval(rnd.x, rnd.y, 0, 0, 200);
            },
  linearStroke:
            function() {
              var rnd = this.random();
              this.stockedStyle("linearStroke", rnd.x, rnd.y);
              this.c2d.begin().box(rnd.x, rnd.y, 140, 140, 20, 1).close();
            },
  linearFill:
            function() {
              var rnd = this.random();
              this.stockedStyle("linearFill", rnd.x, rnd.y);
              this.c2d.begin().box(rnd.x, rnd.y, 140, 140, 20).close();
            }
};

function clearcanvas() {
  var obj = new bench();
  obj.clear();
}
function colorstroke(loop, set) {
  var obj = new bench();
  var perf = new uu.module.perf();
  obj.stockedStyle("colorStroke");
  perf.run(function() { obj.colorStroke(); }, loop, set);
  var r = perf.report();
  uu.log("<br />TEST1: total[%8.2f]ms, avg[%6.2f]ms, set[%d]", r.total, r.avg, r.dump.length);
}
function colorfill(loop, set) {
  var obj = new bench();
  var perf = new uu.module.perf();
  obj.stockedStyle("colorFill");
  perf.run(function() { obj.colorFill(); }, loop, set);
  var r = perf.report();
  uu.log("TEST2: total[%8.2f]ms, avg[%6.2f]ms, set[%d]", r.total, r.avg, r.dump.length);
}
function patternstroke(loop, set) {
  var obj = new bench();
  var perf = new uu.module.perf();
  obj.stockedStyle("patternStroke");
  perf.run(function() { obj.patternStroke(); }, loop, set);
  var r = perf.report();
  uu.log("TEST3: total[%8.2f]ms, avg[%6.2f]ms, set[%d]", r.total, r.avg, r.dump.length);
}
function patternfill(loop, set) {
  var obj = new bench();
  var perf = new uu.module.perf();
  obj.stockedStyle("patternFill");
  perf.run(function() { obj.patternFill(); }, loop, set);
  var r = perf.report();
  uu.log("TEST4: total[%8.2f]ms, avg[%6.2f]ms, set[%d]", r.total, r.avg, r.dump.length);
}
function radialstroke(loop, set) {
  var obj = new bench();
  var perf = new uu.module.perf();
//  obj.stockedStyle("radialStroke");
  perf.run(function() { obj.radialStroke(); }, loop, set);
  var r = perf.report();
  uu.log("TEST5: total[%8.2f]ms, avg[%6.2f]ms, set[%d]", r.total, r.avg, r.dump.length);
}
function radialfill(loop, set) {
  var obj = new bench();
  var perf = new uu.module.perf();
//  obj.stockedStyle("radialFill");
  perf.run(function() { obj.radialFill(); }, loop, set);
  var r = perf.report();
  uu.log("TEST6: total[%8.2f]ms, avg[%6.2f]ms, set[%d]", r.total, r.avg, r.dump.length);
}
function linearstroke(loop, set) {
  var obj = new bench();
  var perf = new uu.module.perf();
//  obj.stockedStyle("linearStroke");
  perf.run(function() { obj.linearStroke(); }, loop, set);
  var r = perf.report();
  uu.log("TEST7: total[%8.2f]ms, avg[%6.2f]ms, set[%d]", r.total, r.avg, r.dump.length);
}
function linearfill(loop, set) {
  var obj = new bench();
  var perf = new uu.module.perf();
//  obj.stockedStyle("linearFill");
  perf.run(function() { obj.linearFill(); }, loop, set);
  var r = perf.report();
  uu.log("TEST8: total[%8.2f]ms, avg[%6.2f]ms, set[%d]", r.total, r.avg, r.dump.length);
}

function boot() {
  if (uu.ua.ie && !(uu.config.repair & 0x1)) {
    var e = uu.attr('input[@value*="TEST4"]');
    e[0].disabled = true;
  }
  var i = 0;
  uu.vtmLowSpeed.set(function() {
    ++i;
    switch (i % 4) {
    case 1:  uu.id("icon").src = "../../img/f32.png"; break;
    case 2:  uu.id("icon").src = "../../img/o32.png"; break;
    case 3:  uu.id("icon").src = "../../img/s32.png"; break;
    default: uu.id("icon").src = "../../img/i32.png"; break;
    }
  }, 2000);
}
uu.ready(boot, "MWC");
</script>
</body>
</html>
